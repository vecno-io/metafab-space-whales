; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Reference",
"class": "ActorInfo",
"language": "GDScript",
"path": "res://structs/ActorInfo..gd"
}, {
"base": "Node2D",
"class": "Bullet",
"language": "GDScript",
"path": "res://prefabs/Bullet.gd"
}, {
"base": "Reference",
"class": "ConfigWorker",
"language": "GDScript",
"path": "res://autoload/workers/ConfigWorker.gd"
}, {
"base": "Node2D",
"class": "EnemyBase",
"language": "GDScript",
"path": "res://prefabs/enemies/scripts/EnemyBase.gd"
}, {
"base": "CanvasLayer",
"class": "MainOverlay",
"language": "GDScript",
"path": "res://interface/MainOverlay.gd"
}, {
"base": "Reference",
"class": "MetaAccount",
"language": "GDScript",
"path": "res://autoload/domains/MetaAccount.gd"
}, {
"base": "Reference",
"class": "MetaConfig",
"language": "GDScript",
"path": "res://structs/MetaConfig.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabContracts",
"language": "GDScript",
"path": "res://addons/metafab-api/contracts/Contracts.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabCurrencies",
"language": "GDScript",
"path": "res://addons/metafab-api/currencies/Currencies.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabGames",
"language": "GDScript",
"path": "res://addons/metafab-api/games/Games.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabItems",
"language": "GDScript",
"path": "res://addons/metafab-api/items/Items.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabLootboxes",
"language": "GDScript",
"path": "res://addons/metafab-api/lootboxes/Lootboxes.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabPlayers",
"language": "GDScript",
"path": "res://addons/metafab-api/players/Players.gd"
}, {
"base": "HTTPRequest",
"class": "MetaFabRequest",
"language": "GDScript",
"path": "res://addons/metafab-api/MetaFabRequest.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabShops",
"language": "GDScript",
"path": "res://addons/metafab-api/shops/Shops.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabTransactions",
"language": "GDScript",
"path": "res://addons/metafab-api/transactions/Transactions.gd"
}, {
"base": "MetaFabRequest",
"class": "MetaFabWallets",
"language": "GDScript",
"path": "res://addons/metafab-api/wallets/Wallets.gd"
}, {
"base": "Reference",
"class": "NakamaAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaAPI.gd"
}, {
"base": "Reference",
"class": "NakamaAsyncResult",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaAsyncResult.gd"
}, {
"base": "Reference",
"class": "NakamaClient",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaClient.gd"
}, {
"base": "Reference",
"class": "NakamaException",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaException.gd"
}, {
"base": "Node",
"class": "NakamaHTTPAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/client/NakamaHTTPAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaLogger",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaLogger.gd"
}, {
"base": "Reference",
"class": "NakamaMultiplayerBridge",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaMultiplayerBridge.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaRTAPI",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTAPI.gd"
}, {
"base": "Reference",
"class": "NakamaRTMessage",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaRTMessage.gd"
}, {
"base": "Reference",
"class": "NakamaSerializer",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/utils/NakamaSerializer.gd"
}, {
"base": "NakamaAsyncResult",
"class": "NakamaSession",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaSession.gd"
}, {
"base": "Reference",
"class": "NakamaSocket",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocket.gd"
}, {
"base": "Node",
"class": "NakamaSocketAdapter",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/socket/NakamaSocketAdapter.gd"
}, {
"base": "Reference",
"class": "NakamaStorageObjectId",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaStorageObjectId.gd"
}, {
"base": "Reference",
"class": "NakamaWriteStorageObject",
"language": "GDScript",
"path": "res://addons/com.heroiclabs.nakama/api/NakamaWriteStorageObject.gd"
}, {
"base": "Node2D",
"class": "PlayerBrains",
"language": "GDScript",
"path": "res://prefabs/PlayerBrains.gd"
}, {
"base": "Reference",
"class": "PlayerInfo",
"language": "GDScript",
"path": "res://structs/PlayerInfo.gd"
}, {
"base": "Node2D",
"class": "PlayerSegment",
"language": "GDScript",
"path": "res://prefabs/PlayerSegment.gd"
}, {
"base": "EnemyBase",
"class": "ProtoEnemy",
"language": "GDScript",
"path": "res://prefabs/enemies/scripts/BasicEnemy.gd"
}, {
"base": "Reference",
"class": "ServerAccount",
"language": "GDScript",
"path": "res://autoload/domains/ServerAccount.gd"
}, {
"base": "Reference",
"class": "ServerException",
"language": "GDScript",
"path": "res://autoload/domains/ServerException.gd"
}, {
"base": "Reference",
"class": "SessionWorker",
"language": "GDScript",
"path": "res://autoload/workers/SessionWorker.gd"
}, {
"base": "Reference",
"class": "SfxrGenerator",
"language": "GDScript",
"path": "res://addons/godot_sfxr/SfxrGenerator.gd"
}, {
"base": "Object",
"class": "SfxrGlobals",
"language": "GDScript",
"path": "res://addons/godot_sfxr/SfxrGlobals.gd"
}, {
"base": "Object",
"class": "SfxrStreamPlayerInterface",
"language": "GDScript",
"path": "res://addons/godot_sfxr/SfxrStreamPlayerInterface.gd"
}, {
"base": "Reference",
"class": "UserInfo",
"language": "GDScript",
"path": "res://structs/UserInfo.gd"
} ]
_global_script_class_icons={
"ActorInfo": "",
"Bullet": "",
"ConfigWorker": "",
"EnemyBase": "",
"MainOverlay": "",
"MetaAccount": "",
"MetaConfig": "",
"MetaFabContracts": "",
"MetaFabCurrencies": "",
"MetaFabGames": "",
"MetaFabItems": "",
"MetaFabLootboxes": "",
"MetaFabPlayers": "",
"MetaFabRequest": "",
"MetaFabShops": "",
"MetaFabTransactions": "",
"MetaFabWallets": "",
"NakamaAPI": "",
"NakamaAsyncResult": "",
"NakamaClient": "",
"NakamaException": "",
"NakamaHTTPAdapter": "",
"NakamaLogger": "",
"NakamaMultiplayerBridge": "",
"NakamaRTAPI": "",
"NakamaRTMessage": "",
"NakamaSerializer": "",
"NakamaSession": "",
"NakamaSocket": "",
"NakamaSocketAdapter": "",
"NakamaStorageObjectId": "",
"NakamaWriteStorageObject": "",
"PlayerBrains": "",
"PlayerInfo": "",
"PlayerSegment": "",
"ProtoEnemy": "",
"ServerAccount": "",
"ServerException": "",
"SessionWorker": "",
"SfxrGenerator": "",
"SfxrGlobals": "",
"SfxrStreamPlayerInterface": "",
"UserInfo": ""
}

[application]

config/name="The-Dust-Harvest"
run/main_scene="res://MetaTestScene.tscn"
config/icon="res://icon.png"

[autoload]

Global="*res://autoload/Global.gd"
Nakama="*res://addons/com.heroiclabs.nakama/Nakama.gd"
MetaFab="*res://addons/metafab-api/MetaFab.tscn"
GameServer="*res://autoload/GameServer.gd"
AudioManager="*res://autoload/AudioManager.tscn"

[display]

window/size/width=960
window/size/height=540
window/size/test_width=1280
window/size/test_height=720
window/stretch/mode="2d"
window/stretch/aspect="keep"

[editor_plugins]

enabled=PoolStringArray( "res://addons/godot_sfxr/plugin.cfg", "res://addons/metafab-api/plugin.cfg" )

[global]

theme=false

[gui]

common/drop_mouse_on_gui_input_disabled=true
theme/custom="res://assets/gui/ui-theme-main.tres"

[input]

move_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777232,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
move_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777231,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
move_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777234,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
move_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
fire_main={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":1,"pressed":false,"doubleclick":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777233,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
jump={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777218,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
boost_speed={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":81,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777351,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":49,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
boost_firerate={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":69,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777352,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":50,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}

[physics]

common/enable_pause_aware_picking=true
2d/thread_model=2

[rendering]

environment/default_clear_color=Color( 0.054902, 0.0470588, 0.0705882, 1 )
environment/default_environment="res://default_env.tres"
